#==============================================================================
# Menu_System
# Edited    April 8 2020
#==============================================================================
#██╗    ██╗██╗███╗   ██╗██████╗  ██████╗ ██╗    ██╗    ███████╗██╗   ██╗███████╗████████╗███████╗███╗   ███╗
#██║    ██║██║████╗  ██║██╔══██╗██╔═══██╗██║    ██║    ██╔════╝╚██╗ ██╔╝██╔════╝╚══██╔══╝██╔════╝████╗ ████║
#██║ █╗ ██║██║██╔██╗ ██║██║  ██║██║   ██║██║ █╗ ██║    ███████╗ ╚████╔╝ ███████╗   ██║   █████╗  ██╔████╔██║
#██║███╗██║██║██║╚██╗██║██║  ██║██║   ██║██║███╗██║    ╚════██║  ╚██╔╝  ╚════██║   ██║   ██╔══╝  ██║╚██╔╝██║
#╚███╔███╔╝██║██║ ╚████║██████╔╝╚██████╔╝╚███╔███╔╝    ███████║   ██║   ███████║   ██║   ███████╗██║ ╚═╝ ██║
# ╚══╝╚══╝ ╚═╝╚═╝  ╚═══╝╚═════╝  ╚═════╝  ╚══╝╚══╝     ╚══════╝   ╚═╝   ╚══════╝   ╚═╝   ╚══════╝╚═╝     ╚═╝
class Window_System < Window_Command

  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize
    super(0, 0)
    update_placement
    self.openness = 0
    open
  end
  #--------------------------------------------------------------------------
  # * Get Window Width
  #--------------------------------------------------------------------------
  def window_width
    return 160
  end
  #--------------------------------------------------------------------------
  # * Update Window Position
  #--------------------------------------------------------------------------
  def update_placement
    self.x = (Graphics.width - width) / 2
    self.y = (Graphics.height - height) / 2
  end
  #--------------------------------------------------------------------------
  # * Get Alignment
  #--------------------------------------------------------------------------
  def alignment
    return 1
  end
  #--------------------------------------------------------------------------
  # * Create Command List
  #--------------------------------------------------------------------------
  def make_command_list
    add_command($data_dialogue[MSCR::WINDOWS::SYSTEMCAT_SAVE], :save, false)
    add_command($data_dialogue[MSCR::WINDOWS::SYSTEMCAT_LOAD], :load, false)#, !$data_savefiles.empty?)
    add_command($data_dialogue[MSCR::WINDOWS::SYSTEMCAT_OPTN], :option, false)
    add_command($data_dialogue[MSCR::WINDOWS::SYSTEMCAT_QUIT], :quit)
    add_command(Vocab::cancel,   :cancel)
  end

end #Window_System

#███████╗ ██████╗███████╗███╗   ██╗███████╗    ███████╗██╗   ██╗███████╗████████╗███████╗███╗   ███╗
#██╔════╝██╔════╝██╔════╝████╗  ██║██╔════╝    ██╔════╝╚██╗ ██╔╝██╔════╝╚══██╔══╝██╔════╝████╗ ████║
#███████╗██║     █████╗  ██╔██╗ ██║█████╗      ███████╗ ╚████╔╝ ███████╗   ██║   █████╗  ██╔████╔██║
#╚════██║██║     ██╔══╝  ██║╚██╗██║██╔══╝      ╚════██║  ╚██╔╝  ╚════██║   ██║   ██╔══╝  ██║╚██╔╝██║
#███████║╚██████╗███████╗██║ ╚████║███████╗    ███████║   ██║   ███████║   ██║   ███████╗██║ ╚═╝ ██║
#╚══════╝ ╚═════╝╚══════╝╚═╝  ╚═══╝╚══════╝    ╚══════╝   ╚═╝   ╚══════╝   ╚═╝   ╚══════╝╚═╝     ╚═╝
class Scene_System < Scene_MenuBase

  #--------------------------------------------------------------------------
  # * Start Processing
  #--------------------------------------------------------------------------
  def start
    super
    create_command_window
  end
  #--------------------------------------------------------------------------
  # * Pre-Termination Processing
  #--------------------------------------------------------------------------
  def pre_terminate
    super
    close_command_window
  end
  #--------------------------------------------------------------------------
  # * Create Command Window
  #--------------------------------------------------------------------------
  def create_command_window
    @command_window = Window_System.new
    @command_window.set_handler(:save,   method(:command_save))
    @command_window.set_handler(:load,   method(:command_load))
    @command_window.set_handler(:option, method(:command_option))
    @command_window.set_handler(:quit,   method(:command_quit))
    @command_window.set_handler(:cancel, method(:return_scene))
  end
  #--------------------------------------------------------------------------
  # * Close Command Window
  #--------------------------------------------------------------------------
  def close_command_window
    @command_window.close
    update until @command_window.close?
  end
  #--------------------------------------------------------------------------
  # * [Save] Command
  #--------------------------------------------------------------------------
  def command_save
    SceneManager.call(Scene_SaveGame)
  end
  #--------------------------------------------------------------------------
  # * [Load] Command
  #--------------------------------------------------------------------------
  def command_load
    SceneManager.call(Scene_LoadGame)
  end
  #--------------------------------------------------------------------------
  # * [Option] Command
  #--------------------------------------------------------------------------
  def command_option
    puts "command_option UNIMPLEMENTED"
  end
  #--------------------------------------------------------------------------
  # * [Quit] Command
  #--------------------------------------------------------------------------
  def command_quit
    SceneManager.call(Scene_End)
  end

end #Scene_System
