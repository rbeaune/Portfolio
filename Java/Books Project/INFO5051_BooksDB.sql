-- MySQL Script generated by MySQL Workbench
-- 07/18/18 21:57:05
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema INFO5051_Books REVISED Version 9 as of July 19, 2018 2120 hours
-- -----------------------------------------------------
-- Script to generate the INFO5051 Books Database and its tables.
DROP SCHEMA IF EXISTS `INFO5051_Books` ;

-- -----------------------------------------------------
-- Schema INFO5051_Books
--
-- Script to generate the INFO5051 Books Database and its tables.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `INFO5051_Books` DEFAULT CHARACTER SET utf8 ;
USE `INFO5051_Books` ;

-- -----------------------------------------------------
-- Table `Book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Book` ;

CREATE TABLE IF NOT EXISTS `Book` (
  `BookID` INT NOT NULL AUTO_INCREMENT COMMENT 'Auto incremented BOOK_id number',
  `Title` VARCHAR(255) NULL COMMENT 'Full title of the book',
  `ISBN` VARCHAR(20) NULL COMMENT 'ISBN number of the book, either ISBN 10 or ISBN 13 is acceptable',
  `Edition_Number` VARCHAR(3) NULL COMMENT 'edtion number of the book',
  `Subject` VARCHAR(45) NULL COMMENT 'Subject of the book, ie programming language',
  `Available` INT NULL DEFAULT 1 COMMENT 'Using as a boolean field. Value of 0 means book is out, any other value book is available',
  PRIMARY KEY (`BookID`))
ENGINE = InnoDB
COMMENT = 'junction table between Book and Author\n';

CREATE UNIQUE INDEX `BookID_UNIQUE` ON `Book` (`BookID` ASC);


-- -----------------------------------------------------
-- Table `Author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Author` ;

CREATE TABLE IF NOT EXISTS `Author` (
  `AuthorID` INT NOT NULL AUTO_INCREMENT,
  `Last_Name` VARCHAR(45) NULL,
  `First_name` VARCHAR(45) NULL,
  PRIMARY KEY (`AuthorID`))
ENGINE = InnoDB;

CREATE INDEX `BookID` ON `Author` (`AuthorID` ASC);


-- -----------------------------------------------------
-- Table `Book_Author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Book_Author` ;

CREATE TABLE IF NOT EXISTS `Book_Author` (
  `Book_BookID` INT NOT NULL,
  `Author_AuthorID` INT NOT NULL,
  CONSTRAINT `fk_Book_Author_Book1`
    FOREIGN KEY (`Book_BookID`)
    REFERENCES `Book` (`BookID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Book_Author_Author1`
    FOREIGN KEY (`Author_AuthorID`)
    REFERENCES `Author` (`AuthorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'junction table between Book and Author tables\n';

CREATE INDEX `fk_Book_Author_Book1_idx` ON `Book_Author` (`Book_BookID` ASC);

CREATE INDEX `fk_Book_Author_Author1_idx` ON `Book_Author` (`Author_AuthorID` ASC);


-- -----------------------------------------------------
-- Table `Borrower`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Borrower` ;

CREATE TABLE IF NOT EXISTS `Borrower` (
  `Borrower_ID` INT NOT NULL AUTO_INCREMENT COMMENT 'auto increment field',
  `Last_Name` VARCHAR(45) NULL COMMENT 'surname of borrower',
  `First_Name` VARCHAR(45) NULL COMMENT 'first name of borrower',
  `Borrower_email` VARCHAR(45) NULL COMMENT 'email of borrower',
  PRIMARY KEY (`Borrower_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Book_Loan`  REVISED July 18, 2018. Added a Due_Date column
-- ALso set the Date_out and Date_due columns as NOT NULL so data must be inserted here
-- REVSISON 9: removed the NOT NULL constraint and set default values back to NULL
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Book_Loan` ;

CREATE TABLE IF NOT EXISTS `Book_Loan` (
  `Book_BookID` INT NOT NULL,
  `Borrower_Borrower_ID` INT NOT NULL,
  `Comment` VARCHAR(45) NULL,
  `Date_out` DATE NULL DEFAULT NULL COMMENT 'Date when book was loaned out.',
  `Date_due` DATE NULL DEFAULT NULL COMMENT 'Date when book is due, added July 18, 2018',
  `Date_returned` DATE NULL DEFAULT NULL COMMENT 'Date when book was returned.',
  CONSTRAINT `fk_Book_Loan_Book1`
    FOREIGN KEY (`Book_BookID`)
    REFERENCES `Book` (`BookID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Book_Loan_Borrower1`
    FOREIGN KEY (`Borrower_Borrower_ID`)
    REFERENCES `Borrower` (`Borrower_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Book_Loan_Book1_idx` ON `Book_Loan` (`Book_BookID` ASC);

CREATE INDEX `fk_Book_Loan_Borrower1_idx` ON `Book_Loan` (`Borrower_Borrower_ID` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

/*
INFO5051 Summer 2018, July 19 revision
INSERT STATEMENTS
*/

INSERT INTO `info5051_books`.`author`
(`AuthorID`,`Last_Name`,`First_name`)
VALUES(authorID, 'Deitel', 'Paul' );

INSERT INTO `info5051_books`.`author`
(`AuthorID`,`Last_Name`,`First_name`)
VALUES(authorID, 'Deitel', 'Harvey' );

INSERT INTO `info5051_books`.`author`
(`AuthorID`,`Last_Name`,`First_name`)
VALUES(authorID, 'Horton', 'Ivor' );

INSERT INTO `info5051_books`.`author`
(`AuthorID`,`Last_Name`,`First_name`)
VALUES(authorID, 'Horstmann', 'Cay' );

INSERT INTO `info5051_books`.`author`
(`AuthorID`,`Last_Name`,`First_name`)
VALUES(authorID, 'Gaddis', 'Tony' );

INSERT INTO `info5051_books`.`author`
(`AuthorID`,`Last_Name`,`First_name`)
VALUES(authorID, 'Liang', 'Y.Daniel' );

INSERT INTO `info5051_books`.`author`
(`AuthorID`,`Last_Name`,`First_name`)
VALUES(authorID, 'Lewis', 'John' );

INSERT INTO `info5051_books`.`author`
(`AuthorID`,`Last_Name`,`First_name`)
VALUES(authorID, 'Loftus', 'William' );

/*inserts for Book table*/

INSERT INTO `info5051_books`.`book`
(`BookID`,`Title`,`ISBN`,`Edition_Number`,`Subject`,`Available`)
VALUES(bookID,'Java:How to Program, Early Objects','9780133807806','10',"java",Available);

INSERT INTO `info5051_books`.`book`
(`BookID`,`Title`,`ISBN`,`Edition_Number`,`Subject`,`Available`)
VALUES(bookID,'Java:Software Solutions Foundations of Program Design','9780321245830','4',"java",Available);

INSERT INTO `info5051_books`.`book`
(`BookID`,`Title`,`ISBN`,`Edition_Number`,`Subject`,`Available`)
VALUES(bookID,'Java:From Control Structures Through Objects','9780321479273','3',"java",Available);

INSERT INTO `info5051_books`.`book`
(`BookID`,`Title`,`ISBN`,`Edition_Number`,`Subject`,`Available`)
VALUES(bookID,'Java Programming Comprehensive Edition','9780132936521','9',"java",Available);

INSERT INTO `info5051_books`.`book`
(`BookID`,`Title`,`ISBN`,`Edition_Number`,`Subject`,`Available`)
VALUES(bookID,'Ivor Horton''s Beginning Java 2 JDK5 Edition','9780764568749','5',"java",Available);

/*inserts for Book_Author table*/

INSERT INTO `info5051_books`.`book_author`
(`Book_BookID`,`Author_AuthorID`)VALUES(1,1);
INSERT INTO `info5051_books`.`book_author`
(`Book_BookID`,`Author_AuthorID`)VALUES(1,2);

INSERT INTO `info5051_books`.`book_author`
(`Book_BookID`,`Author_AuthorID`)VALUES(2,7);
INSERT INTO `info5051_books`.`book_author`
(`Book_BookID`,`Author_AuthorID`)VALUES(2,8);


INSERT INTO `info5051_books`.`book_author`
(`Book_BookID`,`Author_AuthorID`)VALUES(3,5);

INSERT INTO `info5051_books`.`book_author`
(`Book_BookID`,`Author_AuthorID`)VALUES(4,6);

INSERT INTO `info5051_books`.`book_author`
(`Book_BookID`,`Author_AuthorID`)VALUES(5,3);

/*Inserts for Borrowers*/
INSERT INTO `info5051_books`.`borrower`
(`Borrower_ID`,`Last_Name`,`First_Name`,`Borrower_email`)
VALUES(Borrower_ID, 'Doe', 'John','jdoe@fanshaweonline.ca');

INSERT INTO `info5051_books`.`borrower`
(`Borrower_ID`,`Last_Name`,`First_Name`,`Borrower_email`)
VALUES(Borrower_ID, 'Smith', 'Mary','msmith@fanshaweonline.ca');

/*Insert for Book_Loan*/

INSERT INTO `info5051_books`.`book_loan`(`Book_BookID`,`Borrower_Borrower_ID`,`comment`,`Date_out`,`Date_due`,`Date_returned`)
VALUES(1,1,'Borrowed on May 1, 2018','2018-05-01', '2018-05-15','2018-05-15' );

INSERT INTO `info5051_books`.`book_loan`(`Book_BookID`,`Borrower_Borrower_ID`,`comment`,`Date_out`,`Date_due`,`Date_returned`)
VALUES(2,2,'Borrowed on May 1, 2018','2018-05-01', '2018-05-15', null );

/*Update the Book table to set the "available" column value to 0 */
UPDATE `book` SET `available` = 0 WHERE bookID = 2;
